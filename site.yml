---
# SafeLine WAF + VPS –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è - –ì–ª–∞–≤–Ω—ã–π playbook (Localhost –≤–µ—Ä—Å–∏—è)
# –ê–≤—Ç–æ—Ä: Ansible Automation  
# –í–µ—Ä—Å–∏—è: 1.1 (–æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–æ –¥–ª—è localhost)

- name: "SafeLine WAF + VPS - Localhost —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞"
  hosts: safeline_servers
  connection: local
  become: true
  gather_facts: true
  
  vars_prompt:
    - name: "confirm_deployment"
      prompt: "–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—å SafeLine WAF –Ω–∞ localhost? (yes/no)"
      default: "no"
      private: false
  
  pre_tasks:
    - name: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è
      fail:
        msg: "–†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"
      when: confirm_deployment != "yes"
    
    - name: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ –û–°
      fail:
        msg: "–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–∞—è –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞: {{ ansible_distribution }} {{ ansible_distribution_version }}"
      when: >
        not (
          (ansible_distribution == "Ubuntu" and ansible_distribution_version is version('20.04', '>=')) or
          (ansible_distribution == "Debian" and ansible_distribution_major_version|int >= 10)
        )
    
    - name: –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∏–Ω–∏–º–∞–ª—å–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π –∫ —Ä–µ—Å—É—Ä—Å–∞–º
      assert:
        that:
          - ansible_memtotal_mb >= 1024
          - ansible_processor_vcpus >= 1
        fail_msg: "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ä–µ—Å—É—Ä—Å–æ–≤: –º–∏–Ω–∏–º—É–º 1GB RAM –∏ 1 CPU core"
    
    - name: –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ localhost —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–∏
      debug:
        msg: |
          ================================================
          SafeLine WAF Localhost –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ
          ================================================
          –•–æ—Å—Ç: {{ inventory_hostname }}
          –õ–æ–∫–∞–ª—å–Ω—ã–π IP: {{ ansible_default_ipv4.address | default('127.0.0.1') }}
          –û–°: {{ ansible_distribution }} {{ ansible_distribution_version }}
          CPU: {{ ansible_processor_vcpus }} cores
          RAM: {{ ansible_memtotal_mb }}MB
          –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {{ ansible_user_id }}
          –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ: local
          ================================================

  roles:
    - role: common
      tags: 
        - common
        - system
      when: common_setup_enabled | default(true)

    - role: docker
      tags: 
        - docker
        - containers
      when: docker_installation_enabled | default(true)

    - role: firewall
      tags: 
        - firewall
        - security
      when: firewall_setup_enabled | default(true)

    - role: safeline
      tags: 
        - safeline
        - waf
      when: safeline_installation_enabled | default(true)

    - role: nginx
      tags: 
        - nginx
        - reverse-proxy
      when: install_nginx | default(false)

  post_tasks:
    - name: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ SafeLine —Å–µ—Ä–≤–∏—Å–æ–≤
      command: docker compose ps
      args:
        chdir: "{{ safeline_directory }}"
      register: safeline_status
      changed_when: false
      failed_when: false
      tags: 
        - verification
        - safeline

    - name: –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ SafeLine
      debug:
        var: safeline_status.stdout_lines
      when: safeline_status.stdout_lines is defined
      tags: 
        - verification
        - safeline

    - name: –°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ—Ä—Ç–æ–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
      set_fact:
        safeline_check_ports: >-
          {{
            [ safeline_admin_port ] 
            + ([ safeline_https_port ] if install_nginx | default(false) else [])
            + ([ safeline_web_port ] if install_nginx | default(false) else [])
          }}
      tags:
        - safeline
        - verification

    - name: –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –ø–æ—Ä—Ç–æ–≤ SafeLine
      wait_for:
        host: localhost
        port: "{{ item }}"
        timeout: 10
      loop: "{{ safeline_check_ports }}"
      tags:
        - safeline
        - verification



    - name: –ò—Ç–æ–≥–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ localhost —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–∏
      debug:
        msg: |
          ================================================
          LOCALHOST –†–ê–ó–í–ï–†–¢–´–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û –£–°–ü–ï–®–ù–û!
          ================================================
          
          SafeLine WAF –ü–∞–Ω–µ–ª—å –£–ø—Ä–∞–≤–ª–µ–Ω–∏—è:
          üåê https://localhost:{{ safeline_admin_port | default(9443) }}
          üåê https://127.0.0.1:{{ safeline_admin_port | default(9443) }}
          {% if ansible_default_ipv4.address is defined %}
          üåê https://{{ ansible_default_ipv4.address }}:{{ safeline_admin_port | default(9443) }}
          {% endif %}
          
          –ö–æ–º–∞–Ω–¥—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:
          üîë –ü–æ–ª—É—á–∏—Ç—å –ø–∞—Ä–æ–ª—å: sudo docker exec safeline-mgt resetadmin
          üìä –°—Ç–∞—Ç—É—Å: cd {{ safeline_directory }} && sudo docker compose ps
          üìù –õ–æ–≥–∏: cd {{ safeline_directory }} && sudo docker compose logs -f
          
          –ü–æ—Ä—Ç—ã:
          - HTTP: {{ safeline_web_port | default(80) }}
          - HTTPS: 443
          - Admin: {{ safeline_admin_port | default(9443) }}
          
          –†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ IP –¥–ª—è –∞–¥–º–∏–Ω–∫–∏:
          {{ admin_allowed_ips | join(', ') }}
          
          ================================================
      tags: 
        - summary

  handlers:
    - name: restart safeline
      command: docker compose restart
      args:
        chdir: "{{ safeline_directory }}"
    
    - name: reload firewall
      command: ufw reload
      when: ufw_enabled | default(true)
