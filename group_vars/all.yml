---
# SafeLine WAF + VPS автоматизация - Глобальные переменные
# Файл: group_vars/all.yml

#===============================================================================
# ОСНОВНЫЕ СИСТЕМНЫЕ НАСТРОЙКИ
#===============================================================================

# Пользователь для выполнения задач
target_user: "ubuntu"

# Временная зона
timezone: "Europe/Moscow"

# Размер swap файла (в гигабайтах)
swap_size: "2G"
swap_swappiness: 60

# SSH конфигурация
ssh_port: 22
disable_root_login: true
ssh_password_authentication: false
ssh_permit_empty_passwords: false
ssh_x11_forwarding: false
ssh_max_auth_tries: 3
ssh_client_alive_interval: 300
ssh_client_alive_count_max: 2

#===============================================================================
# SAFELINE WAF НАСТРОЙКИ  
#===============================================================================

# Основные пути и порты SafeLine
safeline_directory: "/opt/safeline"
safeline_admin_port: 9443
safeline_http_port: 80
safeline_https_port: 443

# SafeLine конфигурация для docker-compose
safeline_image_tag: "latest"
safeline_postgres_password: "{{ vault_safeline_postgres_password | default('SafeLine2024!') }}"
safeline_subnet_prefix: "172.22.222"
safeline_image_prefix: "chaitin"
safeline_arch_suffix: ""  # Установить в "-arm" для ARM серверов
safeline_release: ""      # Установить в "-lts" для LTS версии
safeline_region: "-g"     # Региональные настройки

# Автозапуск SafeLine
safeline_autostart: true

#===============================================================================
# БЕЗОПАСНОСТЬ И FIREWALL
#===============================================================================

# IP-адреса, которым разрешен доступ к админ-панели SafeLine (порт 9443)
# ОБЯЗАТЕЛЬНО ИЗМЕНИТЕ НА ВАШИ РЕАЛЬНЫЕ IP!
admin_allowed_ips:
  - "192.168.1.0/24"      # Локальная сеть
  - "10.0.0.0/8"          # Локальная сеть
  - "172.16.0.0/12"       # Локальная сеть
  # - "YOUR_PUBLIC_IP/32"  # Ваш публичный IP
  # - "OFFICE_IP/32"       # IP офиса

# UFW Firewall настройки
ufw_enabled: true
ufw_default_policy: "deny"
ufw_logging: "on"

# Fail2ban настройки  
fail2ban_enabled: true
fail2ban_bantime: "10m"
fail2ban_findtime: "10m"
fail2ban_maxretry: 5
fail2ban_ignoreip:
  - "127.0.0.1/8"
  - "192.168.1.0/24"
  - "10.0.0.0/8"
  - "172.16.0.0/12"

#===============================================================================
# DOCKER НАСТРОЙКИ
#===============================================================================

# Docker установка
docker_edition: "ce"
docker_packages:
  - "docker-{{ docker_edition }}"
  - "docker-{{ docker_edition }}-cli"
  - "containerd.io"

# Docker Compose
docker_compose_version: "2.29.7"
docker_compose_path: "/usr/local/bin/docker-compose"

# Добавить пользователя в группу docker
docker_users:
  - "{{ target_user }}"

# Автозапуск Docker
docker_service_state: "started"
docker_service_enabled: true

#===============================================================================
# NGINX REVERSE PROXY (ОПЦИОНАЛЬНО)
#===============================================================================

# Установка Nginx как дополнительного reverse proxy
install_nginx: false

# Nginx порты (если используется как дополнительный слой)
nginx_http_port: 8080
nginx_https_port: 8443

# Certbot для SSL сертификатов
install_certbot: false
certbot_email: "admin@example.com"  # Измените на ваш email

#===============================================================================
# УПРАВЛЕНИЕ РОЛЯМИ И КОМПОНЕНТАМИ
#===============================================================================

# Включение/отключение ролей
common_setup_enabled: true
docker_installation_enabled: true  
firewall_setup_enabled: true
safeline_installation_enabled: true

# Дополнительные пакеты для установки
additional_packages:
  - curl
  - wget
  - git
  - htop
  - ncdu
  - unzip
  - vim
  - tree
  - net-tools
  - tcpdump
  - iotop
  - lsof

#===============================================================================
# МОНИТОРИНГ И ЛОГИРОВАНИЕ
#===============================================================================

# Настройки логирования
log_retention_days: 30
enable_log_rotation: true

# Системные лимиты
max_open_files: 65536
max_processes: 32768

#===============================================================================
# ОКРУЖЕНИЯ (PRODUCTION/STAGING)
#===============================================================================

# Настройки по умолчанию (могут быть переопределены в host_vars)
environment: "production"

# Настройки для разных окружений
production_settings:
  log_level: "INFO"
  debug_mode: false
  backup_enabled: true

staging_settings:
  log_level: "DEBUG"
  debug_mode: true
  backup_enabled: false

#===============================================================================
# РЕЗЕРВНОЕ КОПИРОВАНИЕ И ОБСЛУЖИВАНИЕ
#===============================================================================

# Настройки резервного копирования
backup_enabled: "{{ production_settings.backup_enabled if environment == 'production' else staging_settings.backup_enabled }}"
backup_directory: "/opt/backups"
backup_retention_days: 7

# Автоматические обновления
auto_updates_enabled: false
security_updates_only: true

#===============================================================================
# ПЕРЕМЕННЫЕ ДЛЯ VAULT (СЕКРЕТЫ)
#===============================================================================

# Эти переменные должны быть зашифрованы с помощью ansible-vault
# Пример использования: ansible-vault encrypt_string 'MySecretPassword' --name 'vault_safeline_postgres_password'

# vault_safeline_postgres_password: !vault |
#   $ANSIBLE_VAULT;1.1;AES256
#   ...зашифрованный пароль...

#===============================================================================
# ПРОИЗВОДИТЕЛЬНОСТЬ И ОПТИМИЗАЦИЯ
#===============================================================================

# Настройки производительности
kernel_parameters:
  - { name: "net.core.somaxconn", value: "65535" }
  - { name: "net.ipv4.tcp_max_syn_backlog", value: "65535" }
  - { name: "net.core.netdev_max_backlog", value: "30000" }
  - { name: "net.ipv4.tcp_fin_timeout", value: "30" }
  - { name: "fs.file-max", value: "{{ max_open_files }}" }

# Настройки Docker daemon
docker_daemon_options:
  log-driver: "json-file"
  log-opts:
    max-size: "10m"
    max-file: "3"
  storage-driver: "overlay2"

#===============================================================================
# УВЕДОМЛЕНИЯ (ОПЦИОНАЛЬНО)
#===============================================================================

# Настройки уведомлений (могут быть расширены)
notifications_enabled: false
notification_email: "admin@example.com"
notification_webhook: ""

#===============================================================================
# ДОПОЛНИТЕЛЬНЫЕ НАСТРОЙКИ
#===============================================================================

# Часовой пояс для контейнеров
container_timezone: "{{ timezone }}"

# Настройки DNS
custom_dns_servers:
  - "8.8.8.8"
  - "8.8.4.4"
  - "1.1.1.1"

# Региональные настройки
locale: "en_US.UTF-8"
keyboard_layout: "us"