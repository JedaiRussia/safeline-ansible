---
# SafeLine WAF + VPS Ansible Playbook Configuration
# Production-ready configuration for SafeLine WAF deployment

# ================================================================
# SYSTEM CONFIGURATION
# ================================================================

# Create swap file configuration
create_swap: true
swap_file_size: 2G
swap_file_path: /swapfile

# System packages to install
system_packages:
  - curl
  - wget
  - git
  - htop
  - unzip
  - software-properties-common
  - apt-transport-https
  - ca-certificates
  - gnupg
  - lsb-release

# ================================================================
# SAFELINE WAF CONFIGURATION
# ================================================================

# SafeLine installation directory
safeline_directory: /opt/safeline

# SafeLine admin panel port (HTTPS)
safeline_admin_port: 9443

# SafeLine web panel port (HTTP redirect)
safeline_web_port: 80

# SafeLine management scripts
safeline_scripts:
  - name: safeline-password
    path: /usr/local/bin/safeline-password
  - name: safeline-ctl
    path: /usr/local/bin/safeline-ctl

# ================================================================
# ACCESS CONTROL CONFIGURATION
# ================================================================

# Admin IP addresses allowed to access SafeLine panel
# ВАЖНО: Замените на ваши реальные IP адреса!
admin_allowed_ips:
  - 192.168.1.0/24     # Локальная сеть (пример)
  - 10.0.0.0/8         # Частные сети (пример)
  # - 203.0.113.5      # Ваш внешний IP (раскомментируйте и замените)
  # - 198.51.100.0/24  # Офисная сеть (пример)

# SSH allowed IPs (если нужно ограничить SSH доступ)
ssh_allowed_ips: "{{ admin_allowed_ips }}"

# ================================================================
# DOCKER CONFIGURATION
# ================================================================

# Docker installation
docker_edition: ce
docker_users:
  - "{{ ansible_user }}"

# Docker Compose version
docker_compose_version: "2.24.0"

# ================================================================
# NGINX REVERSE PROXY CONFIGURATION (OPTIONAL)
# ================================================================

# Install Nginx reverse proxy with GeoIP filtering
install_nginx: false

# Nginx configuration (if enabled)
nginx_worker_processes: auto
nginx_worker_connections: 1024
nginx_client_max_body_size: 100M

# GeoIP configuration (if nginx enabled)
nginx_geoip_enabled: false
nginx_blocked_countries:
  - CN  # China
  - RU  # Russia (пример - удалите если не нужно)

# ================================================================
# UFW FIREWALL CONFIGURATION
# ================================================================

# Enable UFW firewall
ufw_enabled: true

# UFW logging level (off, low, medium, high, full)
ufw_logging: medium

# UFW default policies
ufw_default_input_policy: deny
ufw_default_output_policy: allow
ufw_default_forward_policy: deny

# UFW rules configuration
ufw_rules:
  # SSH access
  - { rule: 'allow', port: '22', proto: 'tcp', comment: 'SSH access' }
  
  # HTTP/HTTPS for web traffic
  - { rule: 'allow', port: '80', proto: 'tcp', comment: 'HTTP access' }
  - { rule: 'allow', port: '443', proto: 'tcp', comment: 'HTTPS access' }
  
  # SafeLine admin panel (restricted to admin IPs)
  - { rule: 'allow', port: '{{ safeline_admin_port }}', proto: 'tcp', from_ip: '{{ admin_allowed_ips | join(",") }}', comment: 'SafeLine admin panel' }
  
  # SafeLine management port (internal)
  - { rule: 'allow', port: '9080', proto: 'tcp', from_ip: '127.0.0.1', comment: 'SafeLine internal' }
  
  # Docker networks (if needed)
  - { rule: 'allow', from_ip: '172.16.0.0/12', comment: 'Docker networks' }
  - { rule: 'allow', from_ip: '192.168.0.0/16', comment: 'Local networks' }

# ================================================================
# FAIL2BAN CONFIGURATION
# ================================================================

# Enable fail2ban
fail2ban_enabled: true

# Ban duration (how long IP stays banned)
fail2ban_bantime: '24h'

# Time window for counting failed attempts
fail2ban_findtime: '10m'

# Maximum failed attempts before ban
fail2ban_maxretry: 3

# SSH specific settings
fail2ban_ssh_maxretry: 5
fail2ban_ssh_bantime: '1h'

# Block type: 'reject' (recommended) or 'deny'
fail2ban_blocktype: 'reject'

# IP addresses to ignore (whitelist)
fail2ban_ignoreip: 
  - '127.0.0.1/8'      # Localhost
  - '::1'              # IPv6 localhost
  - '{{ admin_allowed_ips | join(" ") }}'  # Admin IPs

# Email notifications (optional - uncomment to enable)
# fail2ban_destemail: admin@yourdomain.com
# fail2ban_sendername: 'Fail2Ban SafeLine Server'
# fail2ban_sender: fail2ban@yourdomain.com

# Custom fail2ban jails
fail2ban_custom_jails:
  # SafeLine specific protection
  - name: safeline-admin
    enabled: true
    port: "{{ safeline_admin_port }}"
    filter: nginx-http-auth
    logpath: /var/log/nginx/error.log
    maxretry: 3
    bantime: '12h'

# ================================================================
# MONITORING AND MAINTENANCE
# ================================================================

# System monitoring
enable_system_monitoring: true

# Log rotation configuration
logrotate_configs:
  - name: safeline
    path: "{{ safeline_directory }}/logs/*.log"
    options:
      - daily
      - rotate 30
      - compress
      - delaycompress
      - missingok
      - notifempty
      - copytruncate

# Backup configuration
backup_enabled: true
backup_directory: /opt/backups
backup_retention_days: 30

# ================================================================
# SECURITY HARDENING
# ================================================================

# Disable unused services
disable_services:
  - cups
  - avahi-daemon
  - bluetooth

# SSH hardening
ssh_hardening:
  port: 22
  permit_root_login: false
  password_authentication: false
  pubkey_authentication: true
  max_auth_tries: 3
  client_alive_interval: 300
  client_alive_count_max: 2

# Kernel security parameters
kernel_security_params:
  # Network security
  net.ipv4.ip_forward: 0
  net.ipv4.conf.all.send_redirects: 0
  net.ipv4.conf.default.send_redirects: 0
  net.ipv4.conf.all.accept_redirects: 0
  net.ipv4.conf.default.accept_redirects: 0
  net.ipv4.conf.all.accept_source_route: 0
  net.ipv4.conf.default.accept_source_route: 0
  net.ipv4.conf.all.log_martians: 1
  net.ipv4.conf.default.log_martians: 1
  net.ipv4.icmp_echo_ignore_broadcasts: 1
  net.ipv4.icmp_ignore_bogus_error_responses: 1
  net.ipv4.tcp_syncookies: 1
  
  # Memory protection
  kernel.dmesg_restrict: 1
  kernel.kptr_restrict: 2
  kernel.yama.ptrace_scope: 1

# ================================================================
# ENVIRONMENT SPECIFIC OVERRIDES
# ================================================================

# Development environment (override in host_vars if needed)
# development_mode: false

# Production optimizations
production_optimizations:
  # Docker optimizations
  docker_log_max_size: "10m"
  docker_log_max_file: "3"
  
  # System limits
  system_file_max: 65536
  system_pid_max: 32768
  
  # Network optimizations
  net_core_somaxconn: 1024
  net_core_netdev_max_backlog: 5000

# ================================================================
# NOTIFICATION SETTINGS
# ================================================================

# Notification settings (optional)
notifications:
  enabled: false
  # email:
  #   smtp_server: smtp.gmail.com
  #   smtp_port: 587
  #   username: notifications@yourdomain.com
  #   password: "{{ vault_smtp_password }}"
  #   to_addresses:
  #     - admin@yourdomain.com
  # slack:
  #   webhook_url: "{{ vault_slack_webhook }}"
  #   channel: "#security-alerts"

# ================================================================
# CUSTOM VARIABLES (PROJECT SPECIFIC)
# ================================================================

# Custom domain (if using domain instead of IP)
# server_domain: waf.yourdomain.com

# Custom SSL certificates (if not using Let's Encrypt)
# ssl_cert_path: /etc/ssl/certs/yourdomain.pem
# ssl_key_path: /etc/ssl/private/yourdomain.key

# Timezone configuration
timezone: Europe/Moscow

# Locale settings
locale: en_US.UTF-8

# ================================================================
# COMMON ROLE VARIABLES
# ================================================================

# User configuration
target_user: "{{ ansible_user | default('ubuntu') }}"

# Additional packages to install
additional_packages:
  - curl
  - wget
  - git
  - htop
  - unzip
  - software-properties-common
  - apt-transport-https
  - ca-certificates
  - gnupg
  - lsb-release
  - vim
  - tree
  - screen
  - net-tools
  - dnsutils

# Swap configuration  
swap_size: "{{ swap_file_size | default('2G') }}"
swap_swappiness: 10

# System performance limits
max_open_files: 65536
max_processes: 32768

# Log rotation
enable_log_rotation: true

# Kernel parameters for optimization
kernel_parameters:
  - { name: 'vm.swappiness', value: '10' }
  - { name: 'fs.file-max', value: '65536' }
  - { name: 'net.core.somaxconn', value: '1024' }
  - { name: 'net.ipv4.tcp_max_syn_backlog', value: '1024' }
  - { name: 'net.ipv4.tcp_fin_timeout', value: '30' }
